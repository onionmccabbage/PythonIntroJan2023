Python Training January 2023
============================

Toby Dussek 

9:30 start
11:00 coffee UNTIL 11:15
12:30 lunch
3:00 tea
4:30 end


q - why is there no 'run code' option? (only run in terminal)
    solution - install the extention called 'code runner'

Monday
> Welcome
- where to write code: immediate and module
  Pycharm or VSCode or ...
- overview of Python 3 (and briefly Python 2)
- What code does, efficiency concerns and code style
- architecture, structure, and professional code best practice
- print() and input()
> maths operators and data types
- the 'if' statement for conditional logic
- looping with 'for'
- while loop, break and pass
- Python indent syntax
- immutable strings
- print formatting
- square bracket notation for iterable collections
- identifiers
- boolean True and False
- type and type conversion, also isinstance() and isnumeric()
- validate input before casting it
- string manipulation
- Lists, Tuples and nested collections
- after lunch review exercise
- dictionaries (non-numeric indexed iterable collections)
- import, pip, libraries and modules
- very big numeric values
- range, generators

Tuesday
- quick review of where we got to
- tuple comprehension, list compresension, dictionary comprehension
- other kinds of Python: cpython is the default - also jython ipython ironpython
- functions, *args, **kwargs  
- to add libraries to python:
  - python -m ensurepip
  - python â€“m pip install requests (or any other library you need)
- requests
- overview of testing
- strings with triple quotes
- architecture: modules __init__.py and __name__ == '__main__'
- exception handling (try-except etc.)
- review exercise
- import path
- File input and output
- read and write binary files (bytes)

Wednesday
- brief review so far
- in Python EVERYTHING is an Object (values, functions, classes and modules)
- functions live in classes, which live in modules which live in packages
- moving from Py2 to Py3
  https://docs.python.org/3/howto/pyporting.html
- PEP8 style guide
- global and local scope 
- string formatting syntax
- data modelling structures: use built in structures until they do not suit the purpose (then use classes)
- Objects and Classes
- get/set as property decorators @property
- name mangling
- properties, methods, __str__
- intrinsic attributes: __doc__ etc.
- documentation strings (docstring) for classes
- special operators and overriding
- review exercise
- debug tools
- where to go from here:
  https://pynative.com/python-exercises-with-solutions/
  the next courses: advanced python then further advanced python
- end of course feedback







Links
- Python official site https://python.org
- PEP8 style guide https://www.python.org/dev/peps/pep-0008/
- online Python interpreter https://repl.it/languages/Python3
